{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome on Statit user guide . Here you should find the main answers about what Statit is about and how to use it . The first section is an introduction about Statit Learn the basics The following three sections explain how to use Statit in various ways Working with Statit on the web Working with Statit on Microsoft Excel Working with Statit with the API API reference We are preparing tutorials to help you get started on simple workflows. Stay tuned. Please get back to us with any comment at hi@gostatit.com .","title":"Welcome"},{"location":"#welcome","text":"Welcome on Statit user guide . Here you should find the main answers about what Statit is about and how to use it . The first section is an introduction about Statit Learn the basics The following three sections explain how to use Statit in various ways Working with Statit on the web Working with Statit on Microsoft Excel Working with Statit with the API API reference We are preparing tutorials to help you get started on simple workflows. Stay tuned. Please get back to us with any comment at hi@gostatit.com .","title":"Welcome"},{"location":"gs_api/","text":"Getting started with the REST API API version: 1.0.1 This tutorial will take you the main operations on the core Statit API : Set-up and basic concepts Accessing time series Getting a single time serie Getting a list of time series in a collection Pushing time series Creating a collection of time series Pushing series in the collection Adding authorisation for collaborators Set-up and basic concepts API format The API accepts HTTP GET and POST requests . All examples are presented with 'curl'. You can of course execute the requests in the language of your choice. End-point All requests must be addressed to: https://api.gostatit.com/core . Core stands for the core API. ### request curl https://api.gostatit.com/core ### response { \"message\": \"Welcome on Statit core API\" } Authentication Your requests must be identified with your credentials : your username and API Key. Your username and API key can be found in the account section in the home page for your profile. The API uses basic Http authentication . On the command line, it looks like ### request curl -X POST \\ -u username:apikey \\ https://api.gostatit.com/core ### response { \"code\": \"ERROR_PARAM_REQUIRED\", ... } Actions Once you are authentified, you can call specific actions: getSerie, getCollection, putSerie ... You will do this by adding a json object to the query specifying the action called and the required inputs for the action. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\", \"input\": {\"id\": \"climat-fr/cei-m/region/bretagne/temp\"}}' \\ https://api.gostatit.com/core ### response { \"Item\": { \"unit\": \"Degree Celcius\", ... } } In the request above, we call the 'getSerie' action to get a single serie and pass a parameter called input with the 'id' of the serie we are requiring. If you would like to learn the basics about serie identifiers, please head over to Getting started on the web . Errors If your request can not be processed, the API will return an error code with an error message. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\" }' \\ https://api.gostatit.com/core ### response { \"code\": \"ERROR_PARAM_REQUIRED\", \"message\": \"Error. Your request is missing a required parameter. Please check the documentation\" } Next steps You have learnt the basics of how the API works. In the next sections, we will cover how to access time series, create a collection and push time series. Accessing time series Getting a single time serie We have already explored this in the example above. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\", \"input\": {\"id\": \"climat-fr/cei-m/region/bretagne/temp\"}}' \\ https://api.gostatit.com/core ### response { \"Item\": { \"unit\": \"Degree Celcius\", \"frequency\": \"M\", \"sources\": \"Copernicus. Climate and Environmental Series\", \"name\": \"Monthly real temperature\", \"updated\": \"2021-03-10T17:14:45.504Z\", \"observations\": \"[[\\\"1979-01-01\\\", \\\"1.6\\\"], [\\\"1979-02-01\\\", \\\"5.3\\\"], [\\\"1979-03-01\\\", \\\"6.7\\\"], [\\\"1979-04-01\\\", \\\"8.5\\\"], [\\\"1979-05-01\\\", \\\"11.0\\\"], [\\\"1979-06-01\\\", \\\"14.6\\\"] ...\" \"description\": \"Average monthly temperature (degree Celcius)\", \"id\": \"climat-fr/cei-m/region/bretagne/temp\", \"tags\": [] } } The Item object is quite explicit. It contains both serie metadata and data. Note that observations is a stringified array. You can transform it into an array using JSON parsers. Listing time series The API let you request \"children\" series with a single parent. As an example, if you are looking to get all indicators for waste in \"Paris\", you will call dechets-fr/dma-dpt/paris/dechets-menagers-associes and the request will return all related time series. It is necessary to specify exactly the id of the parent. The size of the response is limited to 1MB. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"listSeries\", \"input\": {\"id\": \"dechets-fr/dma-dpt/paris/dechets-menagers-associes\"}}' \\ https://api.gostatit.com/core ### response { \"Items\": [ { \"unit\": \"Tons\", \"frequency\": \"Y\", \"sources\": \"Base Sinoe de l'Ademe\" , \"name\": \"Paris | D\u00e9chets m\u00e9nagers et associ\u00e9s | Valorisation \u00e9nerg\u00e9tique\", \"updated\": \"2021-02-24T07:05:32.120Z\", \"observations\": \"[[\\\"2009-01-01\\\", \\\"842125.33407\\\"], [\\\"2011-01-01\\\", \\\"833876.24514\\\"], [\\\"2013-01-01\\\", \\\"803965.81276\\\"], ...]\", \"description\": \"Paris. D\u00e9chets m\u00e9nagers et associ\u00e9s. Valorisation \u00e9nerg\u00e9tique\", \"id\": \"dechets-fr/dma-dpt/paris/dechets-menagers-associes/valo_energetique\" }, {...} ] } Pushing time series Before using the API to create a collection and push time series, we recommended you try doing it on the web first. Follow the documentation to understand the main concepts. Once you have done this, we will only recap the main steps to: Create a collection Add series to the collection Add authorisations to the collection Creating a collection You create a new collection by providing its 'id' and its 'name'. For this demo, we will create a temperature collection named 'temp'. Replace username and apikey by your credentials below. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putCollection\", \"input\": {\"id\": \"username/temp\", \"name\": \"My temperature collection\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\" } } That's it. You have created your username/temp collection. Well done. Put a serie Now, let's add a serie inside. The required parameters for a serie are: id, name and frequency. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putSerie\", \"input\": {\"id\": \"username/temp/new-york\", \"name\": \"New York temperatures\", \"frequency\": \"D\", \"observations\": \"[[\\\"2021-03-07\\\", 10.0], [\\\"2021-03-08\\\", 11.4]]\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp/new-york\" } } That's it. You have added the username/temp/new-york serie to your collection. Congrats. Add an authorisation Now is the time to create an authorisation to make your serie available to other people. To keep it simple, we will make our serie public. To achieve this, we will use \"public\" as a username. Before we do this, try to access your series on https://gostatit.com/YOUR-USERNAME/temp/new-york. If you are not signed-in, you will not be able to see the serie. Then, create the authorisation. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putCollectionAuth\", \"input\": { \"id\": \"username/temp\", \"username\": \"public\", \"type\": \"viewer\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", \"username\": \"public\", \"type\": \"viewer\" } } Well done. Now check https://gostatit.com/YOUR-USERNAME/temp/new-york. Your collection and serie can be accessed by everyone. Removing the authorisation Time to clean-up. Let's remove the \"publics\" authorisation. Example ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteCollectionAuth\", \"input\": { \"id\": \"username/temp\", \"username\": \"public\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", \"username\": \"public\", } } Removing the serie Now, let's remove the serie from the collection. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteSerie\", \"input\": { \"id\": \"username/temp/new-york\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp/new-york\", } } Removing the collection Now that we have emptied the collection, we can safely remove it. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteCollection\", \"input\": { \"id\": \"username/temp\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", } } That's it. You have completed the tutorial. Congratulations. Next steps You will find the full API reference here","title":"Getting started with the REST API"},{"location":"gs_api/#getting-started-with-the-rest-api","text":"API version: 1.0.1 This tutorial will take you the main operations on the core Statit API : Set-up and basic concepts Accessing time series Getting a single time serie Getting a list of time series in a collection Pushing time series Creating a collection of time series Pushing series in the collection Adding authorisation for collaborators","title":"Getting started with the REST API"},{"location":"gs_api/#set-up-and-basic-concepts","text":"","title":"Set-up and basic concepts"},{"location":"gs_api/#api-format","text":"The API accepts HTTP GET and POST requests . All examples are presented with 'curl'. You can of course execute the requests in the language of your choice.","title":"API format"},{"location":"gs_api/#end-point","text":"All requests must be addressed to: https://api.gostatit.com/core . Core stands for the core API. ### request curl https://api.gostatit.com/core ### response { \"message\": \"Welcome on Statit core API\" }","title":"End-point"},{"location":"gs_api/#authentication","text":"Your requests must be identified with your credentials : your username and API Key. Your username and API key can be found in the account section in the home page for your profile. The API uses basic Http authentication . On the command line, it looks like ### request curl -X POST \\ -u username:apikey \\ https://api.gostatit.com/core ### response { \"code\": \"ERROR_PARAM_REQUIRED\", ... }","title":"Authentication"},{"location":"gs_api/#actions","text":"Once you are authentified, you can call specific actions: getSerie, getCollection, putSerie ... You will do this by adding a json object to the query specifying the action called and the required inputs for the action. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\", \"input\": {\"id\": \"climat-fr/cei-m/region/bretagne/temp\"}}' \\ https://api.gostatit.com/core ### response { \"Item\": { \"unit\": \"Degree Celcius\", ... } } In the request above, we call the 'getSerie' action to get a single serie and pass a parameter called input with the 'id' of the serie we are requiring. If you would like to learn the basics about serie identifiers, please head over to Getting started on the web .","title":"Actions"},{"location":"gs_api/#errors","text":"If your request can not be processed, the API will return an error code with an error message. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\" }' \\ https://api.gostatit.com/core ### response { \"code\": \"ERROR_PARAM_REQUIRED\", \"message\": \"Error. Your request is missing a required parameter. Please check the documentation\" }","title":"Errors"},{"location":"gs_api/#next-steps","text":"You have learnt the basics of how the API works. In the next sections, we will cover how to access time series, create a collection and push time series.","title":"Next steps"},{"location":"gs_api/#accessing-time-series","text":"","title":"Accessing time series"},{"location":"gs_api/#getting-a-single-time-serie","text":"We have already explored this in the example above.","title":"Getting a single time serie"},{"location":"gs_api/#example","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"getSerie\", \"input\": {\"id\": \"climat-fr/cei-m/region/bretagne/temp\"}}' \\ https://api.gostatit.com/core ### response { \"Item\": { \"unit\": \"Degree Celcius\", \"frequency\": \"M\", \"sources\": \"Copernicus. Climate and Environmental Series\", \"name\": \"Monthly real temperature\", \"updated\": \"2021-03-10T17:14:45.504Z\", \"observations\": \"[[\\\"1979-01-01\\\", \\\"1.6\\\"], [\\\"1979-02-01\\\", \\\"5.3\\\"], [\\\"1979-03-01\\\", \\\"6.7\\\"], [\\\"1979-04-01\\\", \\\"8.5\\\"], [\\\"1979-05-01\\\", \\\"11.0\\\"], [\\\"1979-06-01\\\", \\\"14.6\\\"] ...\" \"description\": \"Average monthly temperature (degree Celcius)\", \"id\": \"climat-fr/cei-m/region/bretagne/temp\", \"tags\": [] } } The Item object is quite explicit. It contains both serie metadata and data. Note that observations is a stringified array. You can transform it into an array using JSON parsers.","title":"Example"},{"location":"gs_api/#listing-time-series","text":"The API let you request \"children\" series with a single parent. As an example, if you are looking to get all indicators for waste in \"Paris\", you will call dechets-fr/dma-dpt/paris/dechets-menagers-associes and the request will return all related time series. It is necessary to specify exactly the id of the parent. The size of the response is limited to 1MB.","title":"Listing time series"},{"location":"gs_api/#example_1","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"listSeries\", \"input\": {\"id\": \"dechets-fr/dma-dpt/paris/dechets-menagers-associes\"}}' \\ https://api.gostatit.com/core ### response { \"Items\": [ { \"unit\": \"Tons\", \"frequency\": \"Y\", \"sources\": \"Base Sinoe de l'Ademe\" , \"name\": \"Paris | D\u00e9chets m\u00e9nagers et associ\u00e9s | Valorisation \u00e9nerg\u00e9tique\", \"updated\": \"2021-02-24T07:05:32.120Z\", \"observations\": \"[[\\\"2009-01-01\\\", \\\"842125.33407\\\"], [\\\"2011-01-01\\\", \\\"833876.24514\\\"], [\\\"2013-01-01\\\", \\\"803965.81276\\\"], ...]\", \"description\": \"Paris. D\u00e9chets m\u00e9nagers et associ\u00e9s. Valorisation \u00e9nerg\u00e9tique\", \"id\": \"dechets-fr/dma-dpt/paris/dechets-menagers-associes/valo_energetique\" }, {...} ] }","title":"Example"},{"location":"gs_api/#pushing-time-series","text":"Before using the API to create a collection and push time series, we recommended you try doing it on the web first. Follow the documentation to understand the main concepts. Once you have done this, we will only recap the main steps to: Create a collection Add series to the collection Add authorisations to the collection","title":"Pushing time series"},{"location":"gs_api/#creating-a-collection","text":"You create a new collection by providing its 'id' and its 'name'. For this demo, we will create a temperature collection named 'temp'. Replace username and apikey by your credentials below.","title":"Creating a collection"},{"location":"gs_api/#example_2","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putCollection\", \"input\": {\"id\": \"username/temp\", \"name\": \"My temperature collection\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\" } } That's it. You have created your username/temp collection. Well done.","title":"Example"},{"location":"gs_api/#put-a-serie","text":"Now, let's add a serie inside. The required parameters for a serie are: id, name and frequency.","title":"Put a serie"},{"location":"gs_api/#example_3","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putSerie\", \"input\": {\"id\": \"username/temp/new-york\", \"name\": \"New York temperatures\", \"frequency\": \"D\", \"observations\": \"[[\\\"2021-03-07\\\", 10.0], [\\\"2021-03-08\\\", 11.4]]\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp/new-york\" } } That's it. You have added the username/temp/new-york serie to your collection. Congrats.","title":"Example"},{"location":"gs_api/#add-an-authorisation","text":"Now is the time to create an authorisation to make your serie available to other people. To keep it simple, we will make our serie public. To achieve this, we will use \"public\" as a username. Before we do this, try to access your series on https://gostatit.com/YOUR-USERNAME/temp/new-york. If you are not signed-in, you will not be able to see the serie. Then, create the authorisation.","title":"Add an authorisation"},{"location":"gs_api/#example_4","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"putCollectionAuth\", \"input\": { \"id\": \"username/temp\", \"username\": \"public\", \"type\": \"viewer\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", \"username\": \"public\", \"type\": \"viewer\" } } Well done. Now check https://gostatit.com/YOUR-USERNAME/temp/new-york. Your collection and serie can be accessed by everyone.","title":"Example"},{"location":"gs_api/#removing-the-authorisation","text":"Time to clean-up. Let's remove the \"publics\" authorisation.","title":"Removing the authorisation"},{"location":"gs_api/#example_5","text":"### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteCollectionAuth\", \"input\": { \"id\": \"username/temp\", \"username\": \"public\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", \"username\": \"public\", } }","title":"Example"},{"location":"gs_api/#removing-the-serie","text":"Now, let's remove the serie from the collection. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteSerie\", \"input\": { \"id\": \"username/temp/new-york\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp/new-york\", } }","title":"Removing the serie"},{"location":"gs_api/#removing-the-collection","text":"Now that we have emptied the collection, we can safely remove it. ### request curl -X POST \\ -u username:apikey \\ -H \"Content-Type: application/json\" \\ -d '{\"action\": \"deleteCollection\", \"input\": { \"id\": \"username/temp\" }}' \\ https://api.gostatit.com/core ### response { \"input\": { \"id\": \"username/temp\", } } That's it. You have completed the tutorial. Congratulations.","title":"Removing the collection"},{"location":"gs_api/#next-steps_1","text":"You will find the full API reference here","title":"Next steps"},{"location":"gs_excel/","text":"Statit on Microsoft Excel This page explains how to access, create and edit time series in Microsoft Excel using the Statit Excel add-in. The Statit Excel \"add-in\" will allow you to perform basic operations. If you want to go further, you can develop your own add-ins and use the Statit API . Installation In an Excel workbook, go to the \"Insertion\" tab inside the workbook. Look for \"Add-Ins\" or \"Download Add-ins\". On Microsoft Add-in store, search for 'statit'. Press add to install the Statit add-in. The add-in will show as an icon on the right in the main menu. Good job. Signin-in Once the add-in opens, click on the \"Sign in\" tab Enter your username Enter your API key (you will find this in your web account in the home tab) Get series There are two ways to run queries in the add-in: - Get - You specify the query and get the response directly in the sheet where you are working - Batch get - You specify multiple queries in advance, run the queries all together and get the response where it suits you Get a time serie This is the simplest query. Insert the id of a serie in any cell (for instance, cvfr/hosp-dpt/paris/hosp_in) With the cell selected, press \"GET\" The serie is returned starting in the cell below. Next to the id, you will find the status of the query, the date of the query, the size of the query (number of series returned). If there is an error, look at these possible solutions: Fill-in your username and password Check the 'id' is correct by finding it on the web application Make sure you are online Get a specific version You can get the specific version of a serie by including the 'key' of the version behind the serie id separated with a ':'. You will find the existing versions in the serie page (click on the 'Version' link below the serie 'path') Versions are only available when getting a single time serie Get multiple time series Insert the ids of the series you are looking for separated with a \",\" With the cell selected, press \"GET\" List all time series in a collection or a specific path in the collection Insert the id of the parent of the series you want to get \"*\" (cvfr/hosp-dpt/paris*) With the cell selected, press \"GET\" Notes: You can not perform multiple list queries separated with a \",\" Batch Get queries To perform batch queries, insert a \"batch\" sheet inside your workbook Starting on the 2nd line, add a line for every query (limited to 25): In the 1st cell, insert the query string (similar to a simple query) In the 2nd cell, insert the name of the target worksheet (where the response will be sent) In the 3rd cell, insert the name of the target cell (where response will be displayed) Press \"BATCH\" For every query (on every line), you will get the following codes: Status: OK or error (first cell on the right after target cell) Date: full ISO date (second cell) Size: number of series returned (third cell) Put series You can put series directly in the collections you have created in Statit. You can not create a collection from inside Excel. Head over to the web instructions to learn how to create a collection. A single serie Starting anywhere in the sheet, present the serie you want to put in the following format: On line 1, in cell 1, write 'put' (without '') On line 2, in cell 1, write 'id' and in cell 2 the value of the 'id' On line 3, in cell 1, write 'name' and in cell 2 the value of the 'name' On line 4, in cell 1, write 'frequency' and in cell 2 the value of the 'frequency' On line 5, optionally, in cell 1, write 'unit' and in in cell 2 the value of the 'unit' On line 6, optionally, in cell 1, write 'description' and in in cell 2 the value of the 'description' On line 7, optionally, in cell 1, write 'sources' and in in cell 2 the value of the 'sources' On line 8, optionally, in cell 1, write 'notes' and in in cell 2 the value of the 'notes' On line 9, optionally, in cell 1, write 'version' and in in cell 2 the value of the 'version'. Version is a comment that is specifically linked to the version published On line 11, in cell 1, write the date (in YYYY-MM-DD) format (set the format of the cell as Text) and in cell 2, the value of the observation Continue with observations on the following lines and press 'Put'. Metadata You can add specific text metadata for each observation. For instance, for a specific value, you might want to add a commentary. If you are looking to add metadata, you can use the column next to observations to do so. On top of the column with metadata (next to the id of the serie), place a 'm' (for metadata). Multiple series You can put multiple series as long as they share the same dates. Just, put the series in columns next to each other and select all series before pressing 'Put'. The maximum amount of series is limited to 25 for the moment. Next steps You have learnt the basics of using the Statit Excel add-in. If you would like to go further, you can integrate Statit to your own add-ins or build a specific one. See the Statit API here .","title":"Getting started on Microsoft Excel"},{"location":"gs_excel/#statit-on-microsoft-excel","text":"This page explains how to access, create and edit time series in Microsoft Excel using the Statit Excel add-in. The Statit Excel \"add-in\" will allow you to perform basic operations. If you want to go further, you can develop your own add-ins and use the Statit API .","title":"Statit on Microsoft Excel"},{"location":"gs_excel/#installation","text":"In an Excel workbook, go to the \"Insertion\" tab inside the workbook. Look for \"Add-Ins\" or \"Download Add-ins\". On Microsoft Add-in store, search for 'statit'. Press add to install the Statit add-in. The add-in will show as an icon on the right in the main menu. Good job.","title":"Installation"},{"location":"gs_excel/#signin-in","text":"Once the add-in opens, click on the \"Sign in\" tab Enter your username Enter your API key (you will find this in your web account in the home tab)","title":"Signin-in"},{"location":"gs_excel/#get-series","text":"There are two ways to run queries in the add-in: - Get - You specify the query and get the response directly in the sheet where you are working - Batch get - You specify multiple queries in advance, run the queries all together and get the response where it suits you","title":"Get series"},{"location":"gs_excel/#get-a-time-serie","text":"This is the simplest query. Insert the id of a serie in any cell (for instance, cvfr/hosp-dpt/paris/hosp_in) With the cell selected, press \"GET\" The serie is returned starting in the cell below. Next to the id, you will find the status of the query, the date of the query, the size of the query (number of series returned). If there is an error, look at these possible solutions: Fill-in your username and password Check the 'id' is correct by finding it on the web application Make sure you are online","title":"Get a time serie"},{"location":"gs_excel/#get-a-specific-version","text":"You can get the specific version of a serie by including the 'key' of the version behind the serie id separated with a ':'. You will find the existing versions in the serie page (click on the 'Version' link below the serie 'path') Versions are only available when getting a single time serie","title":"Get a specific version"},{"location":"gs_excel/#get-multiple-time-series","text":"Insert the ids of the series you are looking for separated with a \",\" With the cell selected, press \"GET\"","title":"Get multiple time series"},{"location":"gs_excel/#list-all-time-series-in-a-collection-or-a-specific-path-in-the-collection","text":"Insert the id of the parent of the series you want to get \"*\" (cvfr/hosp-dpt/paris*) With the cell selected, press \"GET\" Notes: You can not perform multiple list queries separated with a \",\"","title":"List all time series in a collection or a specific path in the collection"},{"location":"gs_excel/#batch-get-queries","text":"To perform batch queries, insert a \"batch\" sheet inside your workbook Starting on the 2nd line, add a line for every query (limited to 25): In the 1st cell, insert the query string (similar to a simple query) In the 2nd cell, insert the name of the target worksheet (where the response will be sent) In the 3rd cell, insert the name of the target cell (where response will be displayed) Press \"BATCH\" For every query (on every line), you will get the following codes: Status: OK or error (first cell on the right after target cell) Date: full ISO date (second cell) Size: number of series returned (third cell)","title":"Batch Get queries"},{"location":"gs_excel/#put-series","text":"You can put series directly in the collections you have created in Statit. You can not create a collection from inside Excel. Head over to the web instructions to learn how to create a collection.","title":"Put series"},{"location":"gs_excel/#a-single-serie","text":"Starting anywhere in the sheet, present the serie you want to put in the following format: On line 1, in cell 1, write 'put' (without '') On line 2, in cell 1, write 'id' and in cell 2 the value of the 'id' On line 3, in cell 1, write 'name' and in cell 2 the value of the 'name' On line 4, in cell 1, write 'frequency' and in cell 2 the value of the 'frequency' On line 5, optionally, in cell 1, write 'unit' and in in cell 2 the value of the 'unit' On line 6, optionally, in cell 1, write 'description' and in in cell 2 the value of the 'description' On line 7, optionally, in cell 1, write 'sources' and in in cell 2 the value of the 'sources' On line 8, optionally, in cell 1, write 'notes' and in in cell 2 the value of the 'notes' On line 9, optionally, in cell 1, write 'version' and in in cell 2 the value of the 'version'. Version is a comment that is specifically linked to the version published On line 11, in cell 1, write the date (in YYYY-MM-DD) format (set the format of the cell as Text) and in cell 2, the value of the observation Continue with observations on the following lines and press 'Put'.","title":"A single serie"},{"location":"gs_excel/#metadata","text":"You can add specific text metadata for each observation. For instance, for a specific value, you might want to add a commentary. If you are looking to add metadata, you can use the column next to observations to do so. On top of the column with metadata (next to the id of the serie), place a 'm' (for metadata).","title":"Metadata"},{"location":"gs_excel/#multiple-series","text":"You can put multiple series as long as they share the same dates. Just, put the series in columns next to each other and select all series before pressing 'Put'. The maximum amount of series is limited to 25 for the moment.","title":"Multiple series"},{"location":"gs_excel/#next-steps","text":"You have learnt the basics of using the Statit Excel add-in. If you would like to go further, you can integrate Statit to your own add-ins or build a specific one. See the Statit API here .","title":"Next steps"},{"location":"gs_web/","text":"Statit on the Web This page explains how to access, create and edit time series using a web browser. Accessing time series A time serie Let's have a look at the number of patents declared in the US since the end of the 19th century. As you click on the link, you will reach the page of a time serie. It is described by its name, description, unit and finally its observations presented as a chart. Understanding the serie Looking at the chart is a first step. We might be interested in the value at a specific point in time. Use the cursor below the graph to zoom on the period that is relevant. Move your mouse on the chart to look at a specific value. If you are interested in exploring the numbers, click on the \"grid\" on the top left hand corner of the chart. This will allow you to browse the serie as a table of numbers. Looking at trends Some of the series are hard to understand as such. This is the case of volatile measures that are highly seasonal like temperature. See monthly air temperature records in Brittany since 1980 We need a way to understand the trends. Averaging the observations of the last 12 months would allow to remove the seasonal movement of temperatures. On the serie page above, find the small wheel on the top right hand side of the chart. A menu will appear with different ways to look at the serie such as changing the period of reporting. In the example above, in Aggregation, select annual (and average). In Transformation, select last 4 periods. The underlying trend of roughly 1.5 degrees Celsius increase in the last 30 years will be easier to spot then. Downloading the serie You might now need to work with this data to compare it with other long-term trends, transform it or present it in a chart. Click on the down arrow on the right hand side and select the format you are interested in. European and the UK & US formats differ in the decimal separator in numbers (',' for Europe and '.' for UK & US). Following the serie If you are interested in the serie and would like to save it for future reference, click on the star on the top right of the screen. You will need to be signed-in to access that feature. The series you follow will be accessible from your home page in the favorites tab. On this tab, you will be able to set a notification when to get an alert when the serie is updated. Exploring previous versions On the serie page, below the 'path' of the serie, you will find a \"Version\" badge indicating 'last' or a specific version date. Click on 'Version' to list all the versions of the serie. Click on a specific version to access the serie as it was for this version. Collections Time series belong to collections which are groups of related series. You can navigate in the collection by clicking on the grey links just under the serie name. Here is the link to the collection of long-term monthly air temperatures that includes the serie we have looked at before. The collection page will provide the background on the time series included: rationale, sources, methodology, structure, contact details ... Next steps You have now learnt the basics of Statit: how to find a serie, how to use it and follow it, how to find a collection and navigate inside it. If you would like to use time series directly in Excel, please go to the Excel section If you would like to start your own collections, continue reading. Building a collection Access Building collections on Statit is for the moment limited to \"beta\" users. You are welcome to get started, please get in touch at hi@gostatit.com . The following guide is for users with access to that feature. Collections and series Time series are placed inside collections. Collections represent series on a similar subject, time range, structure or audience. You can visit the following public collections to get a sense of what they are: French departmental air pollution indicators Monthly indices of retail activity in France Time series have unique identifiers similar to file names on a computer. Time serie identifiers follow the format: [username] / [key of the collection] / [key of the serie]: username: the username of the collection administrator key of the collection: the specific identifier for the collection (only alpha-numerical characters and point, underscore and dash characters) key of the serie: specific identifier for the serie in the collection (same characters as collection key and slash ) Slashes can be added to the key of the serie. Slashes are a way to structure the navigation inside your collection. The slashes play the role of subfolders when browsing the collection. For instance, the serie bdf-conj/commn/categorie/chaussure/indice-valeur/brut has the following structure: username: bdj-conj (stands for \"banque de france - conjoncture\" - an account dedicated to tracking) key of the collection: commn (stands for commerce national) key of the serie: categorie/chaussure/indice-valeur/brut Collections are either public or private. Public collections will be visible by anyone on the web and time series accessible by anyone on the web. Private collections (and the time series inside) will only be visible and accessible by the authorised collaborators. Creating a collection Go to the home page and click on the \"Collections\" tab. On the right hand side, click on \"Add collection\" Fill the required fields for the collection: key and name Press save Adding a serie Now that your collection is created, you can add your first serie: Click on the collection On the top right hand side, click on \"Add serie\" Fill the required field for the time serie Press save You have two options for adding observations: Load a CSV file with the serie observations Write (or paste) values manually We currently only accept observations with the following format: Dates following the ISO 8601 format: YYYY-MM-DD (for example: 2021-01-02) Values with decimal separator as a point Each observation is on one line (date, observation) Date and observations must be split by either \",\" or \";\" or a tab Observation-level metadata You can add text metadata at observation level. To do so, add the metadata value after the value. If you choose to add metadata to an observation, you will need to add a metadata field to all observations. This field can be empty (\"\") but will need to exist Adding authorisations By default, your collection and the time series it includes are private. The owner is the only one who can see them. To collaborate with others, you need to add access rights to the collection. There are four different types of rights you can provide to other users: - Observer - This allows the user to view the collection and its time series - Member - This allows the user to view the collection, its time series and participate with comments - Editor - This allows the user to view and edit the collection - Administrator - This allows the user to view, edit the collection and manage access rights You add users with their email or their Statit username. For the moment, you can only invite users with a live account on Statit . Users can create an account for free on the sign-up page Public collections If you want to make your collection publicly visible. Add a user with the username 'public'. Next steps You have now learnt the basics of building and sharing a collection on Statit. If you would like to put time series directly from Excel, please go to the Excel section If you would like to learn how to work with Statit using the API, go here","title":"Getting started on the Web"},{"location":"gs_web/#statit-on-the-web","text":"This page explains how to access, create and edit time series using a web browser.","title":"Statit on the Web"},{"location":"gs_web/#accessing-time-series","text":"","title":"Accessing time series"},{"location":"gs_web/#a-time-serie","text":"Let's have a look at the number of patents declared in the US since the end of the 19th century. As you click on the link, you will reach the page of a time serie. It is described by its name, description, unit and finally its observations presented as a chart.","title":"A time serie"},{"location":"gs_web/#understanding-the-serie","text":"Looking at the chart is a first step. We might be interested in the value at a specific point in time. Use the cursor below the graph to zoom on the period that is relevant. Move your mouse on the chart to look at a specific value. If you are interested in exploring the numbers, click on the \"grid\" on the top left hand corner of the chart. This will allow you to browse the serie as a table of numbers.","title":"Understanding the serie"},{"location":"gs_web/#looking-at-trends","text":"Some of the series are hard to understand as such. This is the case of volatile measures that are highly seasonal like temperature. See monthly air temperature records in Brittany since 1980 We need a way to understand the trends. Averaging the observations of the last 12 months would allow to remove the seasonal movement of temperatures. On the serie page above, find the small wheel on the top right hand side of the chart. A menu will appear with different ways to look at the serie such as changing the period of reporting. In the example above, in Aggregation, select annual (and average). In Transformation, select last 4 periods. The underlying trend of roughly 1.5 degrees Celsius increase in the last 30 years will be easier to spot then.","title":"Looking at trends"},{"location":"gs_web/#downloading-the-serie","text":"You might now need to work with this data to compare it with other long-term trends, transform it or present it in a chart. Click on the down arrow on the right hand side and select the format you are interested in. European and the UK & US formats differ in the decimal separator in numbers (',' for Europe and '.' for UK & US).","title":"Downloading the serie"},{"location":"gs_web/#following-the-serie","text":"If you are interested in the serie and would like to save it for future reference, click on the star on the top right of the screen. You will need to be signed-in to access that feature. The series you follow will be accessible from your home page in the favorites tab. On this tab, you will be able to set a notification when to get an alert when the serie is updated.","title":"Following the serie"},{"location":"gs_web/#exploring-previous-versions","text":"On the serie page, below the 'path' of the serie, you will find a \"Version\" badge indicating 'last' or a specific version date. Click on 'Version' to list all the versions of the serie. Click on a specific version to access the serie as it was for this version.","title":"Exploring previous versions"},{"location":"gs_web/#collections","text":"Time series belong to collections which are groups of related series. You can navigate in the collection by clicking on the grey links just under the serie name. Here is the link to the collection of long-term monthly air temperatures that includes the serie we have looked at before. The collection page will provide the background on the time series included: rationale, sources, methodology, structure, contact details ...","title":"Collections"},{"location":"gs_web/#next-steps","text":"You have now learnt the basics of Statit: how to find a serie, how to use it and follow it, how to find a collection and navigate inside it. If you would like to use time series directly in Excel, please go to the Excel section If you would like to start your own collections, continue reading.","title":"Next steps"},{"location":"gs_web/#building-a-collection","text":"","title":"Building a collection"},{"location":"gs_web/#access","text":"Building collections on Statit is for the moment limited to \"beta\" users. You are welcome to get started, please get in touch at hi@gostatit.com . The following guide is for users with access to that feature.","title":"Access"},{"location":"gs_web/#collections-and-series","text":"Time series are placed inside collections. Collections represent series on a similar subject, time range, structure or audience. You can visit the following public collections to get a sense of what they are: French departmental air pollution indicators Monthly indices of retail activity in France Time series have unique identifiers similar to file names on a computer. Time serie identifiers follow the format: [username] / [key of the collection] / [key of the serie]: username: the username of the collection administrator key of the collection: the specific identifier for the collection (only alpha-numerical characters and point, underscore and dash characters) key of the serie: specific identifier for the serie in the collection (same characters as collection key and slash ) Slashes can be added to the key of the serie. Slashes are a way to structure the navigation inside your collection. The slashes play the role of subfolders when browsing the collection. For instance, the serie bdf-conj/commn/categorie/chaussure/indice-valeur/brut has the following structure: username: bdj-conj (stands for \"banque de france - conjoncture\" - an account dedicated to tracking) key of the collection: commn (stands for commerce national) key of the serie: categorie/chaussure/indice-valeur/brut Collections are either public or private. Public collections will be visible by anyone on the web and time series accessible by anyone on the web. Private collections (and the time series inside) will only be visible and accessible by the authorised collaborators.","title":"Collections and series"},{"location":"gs_web/#creating-a-collection","text":"Go to the home page and click on the \"Collections\" tab. On the right hand side, click on \"Add collection\" Fill the required fields for the collection: key and name Press save","title":"Creating a collection"},{"location":"gs_web/#adding-a-serie","text":"Now that your collection is created, you can add your first serie: Click on the collection On the top right hand side, click on \"Add serie\" Fill the required field for the time serie Press save You have two options for adding observations: Load a CSV file with the serie observations Write (or paste) values manually We currently only accept observations with the following format: Dates following the ISO 8601 format: YYYY-MM-DD (for example: 2021-01-02) Values with decimal separator as a point Each observation is on one line (date, observation) Date and observations must be split by either \",\" or \";\" or a tab","title":"Adding a serie"},{"location":"gs_web/#observation-level-metadata","text":"You can add text metadata at observation level. To do so, add the metadata value after the value. If you choose to add metadata to an observation, you will need to add a metadata field to all observations. This field can be empty (\"\") but will need to exist","title":"Observation-level metadata"},{"location":"gs_web/#adding-authorisations","text":"By default, your collection and the time series it includes are private. The owner is the only one who can see them. To collaborate with others, you need to add access rights to the collection. There are four different types of rights you can provide to other users: - Observer - This allows the user to view the collection and its time series - Member - This allows the user to view the collection, its time series and participate with comments - Editor - This allows the user to view and edit the collection - Administrator - This allows the user to view, edit the collection and manage access rights You add users with their email or their Statit username. For the moment, you can only invite users with a live account on Statit . Users can create an account for free on the sign-up page","title":"Adding authorisations"},{"location":"gs_web/#public-collections","text":"If you want to make your collection publicly visible. Add a user with the username 'public'.","title":"Public collections"},{"location":"gs_web/#next-steps_1","text":"You have now learnt the basics of building and sharing a collection on Statit. If you would like to put time series directly from Excel, please go to the Excel section If you would like to learn how to work with Statit using the API, go here","title":"Next steps"},{"location":"ref_api/","text":"REST API Reference API version: 1.0.1 The REST API reference covers core Statit API functions : Managing collections : putCollection updateCollection getCollection deleteCollection Managing collection access : putCollectionAuth deleteCollectionAuth Managing series : putSerie batchPuSerie getSerie listSeries deleteSerie Errors Requests with errors return a response object with the following attributes: code: An explicit error code message: An explicit error message putCollection putCollection is used to create a new collection . putCollection can not be used to overwrite an existing collection. Collection updates are performed with updateCollection. Parameters action : putCollection input - Object : id - String - required . ID of the collection. Accepted characters: alphanumerical (A to z, 0 to 9), \".\", \"-\" and \"_\" name - String - required . Name of the collection about - String - optional . A field describing the collection in one sentence. Text format frequency - String - optional . A descriptive field. Accepted values: D (day), W (week), M (month), Q (quarter), S (semester), Y (year) description - String - optional . A descriptive field. Text or markdown format. tags - Array - optional . Tags related to the collection Response input - Object : id : id the collection updateCollection updateCollection is used to update the fields of an existing collection Parameters action : updateCollection input - Object : id - String - required . ID of the collection. Needs to be the id an existing collection. name - String - optional . Name of the collection about - String - optional . A field describing the collection in one sentence. Text format frequency - String - optional . A descriptive field. Accepted values: D (day), W (week), M (month), Q (quarter), S (semester), Y (year) description - String - optional . A descriptive field. Text or markdown format. tags - Array - optional . Tags related to the collection Response input - Object : id : id the collection getCollection getCollection is used to access a collection Parameters action : getCollection input - Object : id - required - String . ID of the collection requested Response Item - Object : id - String . ID of the collection. name - String . Name of the collection about - String . A field describing the collection in one sentence. frequency - String . A descriptive field. description - String . A descriptive field. tags - Array . Tags related to the collection deleteCollection deleteCollection is used to delete a collection . Only empty collections with no active series and no authorisations can be deleted. Parameters action : deleteCollection input - Object : id - required - String . ID of the collection to be deleted Response input - Object : id : id the collection putCollectionAuth putCollectionAuth is used to grant an access right to a collection to a Statit user Access rights are of different types: reading rights, editing rights, user management rights. Parameters action : putCollectionAuth input - Object : id - String - required . ID of the collection username - String - required . The username for the person being granted the authorisation type - String - required . The type of authorisation. Accepted values: viewer, member, editor, administrator Statit accepts the following types : Viewers can access the collection and all the series Members can access the collection and series and comment on series Editors can access the collection and series and edit them Administrators can access the collection and series, edit them and manage access \"public\" must be used as a username to make your collection publicly visible and accessible by anyone. Response input - Object : id : id the collection username : username type : type of access granted deleteCollectionAuth deleteCollectionAuth is used to remove an access right for a specific user Parameters action : deleteCollectionAuth input - Object : id - required - String . ID of the collection requested username - required - String . username of the user Response input - Object : id : id the collection username : username of the user putSerie putSerie is used to put a serie inside a collection putSerie is used to create the serie as well as to update it. Every putSerie creates a new saved version of the serie Parameters action : putSerie input - Object : id - String - required . ID of the serie. Accepted characters: alphanumerical (A to z, 0 to 9) and \".\", \"-\", \"_\" and \"/\" name - String - required . Name of the serie frequency - String - required . Frequency of the serie. Accepted values: D, W, M, Q, S, Y description - String - optional . Description of the serie. Text format unit - String - optional . Unit of the serie sources - String - optional . Sources tags - Array - optional . List of tags for the serie notes - String - optional . Publication notes observations - String - optional . A stringified array of individual observations, for instance \"[\\\"2021-03-07\\\", 62.0], [\\\"2021-03-08\\\", 105.0]\". Observation metadata can be added as a third element in each observation array (\"[\\\"2021-03-08\\\", 105.0, \\\"value computed\\\"]\"). If metadata is added, it must be added on everyline version - String - optional . A short comment that will be recorded with the specific serie update Response input - Object : id : id of the serie batchPutSerie batchPutSerie is used to put multiple series inside a collection. Up to 25 series can be put in a single call. Parameters action : batchPutSerie input - Array : Serie object as in putSerie Response input - Array: ids of the series pushed getSerie getSerie is used to get a single time serie from a collection Parameters action : getSerie input - Object : id - required - String . ID of the serie requested Response Item - Object : id - String - required . ID of the serie name - String - required . Name of the serie frequency - String - required . Frequency of the serie description - String - optional . Description of the serie observations - String - optional . A stringified array of individual observations unit - String - optional . Unit of the serie sources - String - optional . Sources (separated with a \";\") tags - Array - optional . List of tags for the serie notes - String - optional . Publication notes version - String - optional . A comment linked to the version listSeries listSeries is used to get all children series under a single parent ID. As an example, a/b/c is the parent ID of a/b/c/serie1 and a/b/c/serie2 Parameters action : listSeries input - Object : id - required - String . ID of the parentID Response Items - Array of Item (see get serie) deleteSerie deleteSerie is used to remove a serie. Parameters action : deleteSerie input - Object : id - required - String . ID of the serie Response input - Object : id : id of the serie","title":"REST API reference"},{"location":"ref_api/#rest-api-reference","text":"API version: 1.0.1 The REST API reference covers core Statit API functions : Managing collections : putCollection updateCollection getCollection deleteCollection Managing collection access : putCollectionAuth deleteCollectionAuth Managing series : putSerie batchPuSerie getSerie listSeries deleteSerie","title":"REST API Reference"},{"location":"ref_api/#errors","text":"Requests with errors return a response object with the following attributes: code: An explicit error code message: An explicit error message","title":"Errors"},{"location":"ref_api/#putcollection","text":"putCollection is used to create a new collection . putCollection can not be used to overwrite an existing collection. Collection updates are performed with updateCollection.","title":"putCollection"},{"location":"ref_api/#parameters","text":"action : putCollection input - Object : id - String - required . ID of the collection. Accepted characters: alphanumerical (A to z, 0 to 9), \".\", \"-\" and \"_\" name - String - required . Name of the collection about - String - optional . A field describing the collection in one sentence. Text format frequency - String - optional . A descriptive field. Accepted values: D (day), W (week), M (month), Q (quarter), S (semester), Y (year) description - String - optional . A descriptive field. Text or markdown format. tags - Array - optional . Tags related to the collection","title":"Parameters"},{"location":"ref_api/#response","text":"input - Object : id : id the collection","title":"Response"},{"location":"ref_api/#updatecollection","text":"updateCollection is used to update the fields of an existing collection","title":"updateCollection"},{"location":"ref_api/#parameters_1","text":"action : updateCollection input - Object : id - String - required . ID of the collection. Needs to be the id an existing collection. name - String - optional . Name of the collection about - String - optional . A field describing the collection in one sentence. Text format frequency - String - optional . A descriptive field. Accepted values: D (day), W (week), M (month), Q (quarter), S (semester), Y (year) description - String - optional . A descriptive field. Text or markdown format. tags - Array - optional . Tags related to the collection","title":"Parameters"},{"location":"ref_api/#response_1","text":"input - Object : id : id the collection","title":"Response"},{"location":"ref_api/#getcollection","text":"getCollection is used to access a collection","title":"getCollection"},{"location":"ref_api/#parameters_2","text":"action : getCollection input - Object : id - required - String . ID of the collection requested","title":"Parameters"},{"location":"ref_api/#response_2","text":"Item - Object : id - String . ID of the collection. name - String . Name of the collection about - String . A field describing the collection in one sentence. frequency - String . A descriptive field. description - String . A descriptive field. tags - Array . Tags related to the collection","title":"Response"},{"location":"ref_api/#deletecollection","text":"deleteCollection is used to delete a collection . Only empty collections with no active series and no authorisations can be deleted.","title":"deleteCollection"},{"location":"ref_api/#parameters_3","text":"action : deleteCollection input - Object : id - required - String . ID of the collection to be deleted","title":"Parameters"},{"location":"ref_api/#response_3","text":"input - Object : id : id the collection","title":"Response"},{"location":"ref_api/#putcollectionauth","text":"putCollectionAuth is used to grant an access right to a collection to a Statit user Access rights are of different types: reading rights, editing rights, user management rights.","title":"putCollectionAuth"},{"location":"ref_api/#parameters_4","text":"action : putCollectionAuth input - Object : id - String - required . ID of the collection username - String - required . The username for the person being granted the authorisation type - String - required . The type of authorisation. Accepted values: viewer, member, editor, administrator Statit accepts the following types : Viewers can access the collection and all the series Members can access the collection and series and comment on series Editors can access the collection and series and edit them Administrators can access the collection and series, edit them and manage access \"public\" must be used as a username to make your collection publicly visible and accessible by anyone.","title":"Parameters"},{"location":"ref_api/#response_4","text":"input - Object : id : id the collection username : username type : type of access granted","title":"Response"},{"location":"ref_api/#deletecollectionauth","text":"deleteCollectionAuth is used to remove an access right for a specific user","title":"deleteCollectionAuth"},{"location":"ref_api/#parameters_5","text":"action : deleteCollectionAuth input - Object : id - required - String . ID of the collection requested username - required - String . username of the user","title":"Parameters"},{"location":"ref_api/#response_5","text":"input - Object : id : id the collection username : username of the user","title":"Response"},{"location":"ref_api/#putserie","text":"putSerie is used to put a serie inside a collection putSerie is used to create the serie as well as to update it. Every putSerie creates a new saved version of the serie","title":"putSerie"},{"location":"ref_api/#parameters_6","text":"action : putSerie input - Object : id - String - required . ID of the serie. Accepted characters: alphanumerical (A to z, 0 to 9) and \".\", \"-\", \"_\" and \"/\" name - String - required . Name of the serie frequency - String - required . Frequency of the serie. Accepted values: D, W, M, Q, S, Y description - String - optional . Description of the serie. Text format unit - String - optional . Unit of the serie sources - String - optional . Sources tags - Array - optional . List of tags for the serie notes - String - optional . Publication notes observations - String - optional . A stringified array of individual observations, for instance \"[\\\"2021-03-07\\\", 62.0], [\\\"2021-03-08\\\", 105.0]\". Observation metadata can be added as a third element in each observation array (\"[\\\"2021-03-08\\\", 105.0, \\\"value computed\\\"]\"). If metadata is added, it must be added on everyline version - String - optional . A short comment that will be recorded with the specific serie update","title":"Parameters"},{"location":"ref_api/#response_6","text":"input - Object : id : id of the serie","title":"Response"},{"location":"ref_api/#batchputserie","text":"batchPutSerie is used to put multiple series inside a collection. Up to 25 series can be put in a single call.","title":"batchPutSerie"},{"location":"ref_api/#parameters_7","text":"action : batchPutSerie input - Array : Serie object as in putSerie","title":"Parameters"},{"location":"ref_api/#response_7","text":"input - Array: ids of the series pushed","title":"Response"},{"location":"ref_api/#getserie","text":"getSerie is used to get a single time serie from a collection","title":"getSerie"},{"location":"ref_api/#parameters_8","text":"action : getSerie input - Object : id - required - String . ID of the serie requested","title":"Parameters"},{"location":"ref_api/#response_8","text":"Item - Object : id - String - required . ID of the serie name - String - required . Name of the serie frequency - String - required . Frequency of the serie description - String - optional . Description of the serie observations - String - optional . A stringified array of individual observations unit - String - optional . Unit of the serie sources - String - optional . Sources (separated with a \";\") tags - Array - optional . List of tags for the serie notes - String - optional . Publication notes version - String - optional . A comment linked to the version","title":"Response"},{"location":"ref_api/#listseries","text":"listSeries is used to get all children series under a single parent ID. As an example, a/b/c is the parent ID of a/b/c/serie1 and a/b/c/serie2","title":"listSeries"},{"location":"ref_api/#parameters_9","text":"action : listSeries input - Object : id - required - String . ID of the parentID","title":"Parameters"},{"location":"ref_api/#response_9","text":"Items - Array of Item (see get serie)","title":"Response"},{"location":"ref_api/#deleteserie","text":"deleteSerie is used to remove a serie.","title":"deleteSerie"},{"location":"ref_api/#parameters_10","text":"action : deleteSerie input - Object : id - required - String . ID of the serie","title":"Parameters"},{"location":"ref_api/#response_10","text":"input - Object : id : id of the serie","title":"Response"},{"location":"what_is/","text":"What is Statit? Statit is a tool for teams to manage time series collaboratively . Time series are great data structures that support a range of analytical use cases such as economic research, strategic planning, environmental monitoring or performance reporting. Time series are used in education, academic research, government and in the business world . What's the problem In many cases, analytical work is performed as part of a team : Developing collaborative time-serie intelligence on a specific subject (physical market prices) Planning business operations using a set of common assumptions from sales, supply and finances Monitoring activity across various organisations In the examples above, the team will at one point need to share time series inputs (case 1 and 2) or outputs (case 2 and 3). But how to share time series ? The best way is to put time series in a shared central space and let collaborators edit and access time series according to their needs. Think Google docs or Dropbox for time series. But these do not work with time series. Neither does Excel. And setting-up a database is tricky and is just the beginning of a solution. The solution Teams need an out of the box collaborative registry for storing and accessing time series . Here come Statit Statit provides a managed collaborative registry with four main advantages: Securing time-serie assets - All time series are stored in one place in the cloud with back-up and all revisions stored. Enabling collaboration - Teams collaborate around collections of series. Individual analysts can edit, review, access series according to the permissions provided by the collection administrator Improving time-serie management efficiency - By placing time series as shared ressources, teams collaborate much more efficiently, avoiding duplicate work and improving the quality of input and output Accelerating analytical workflows - With time series in a modern registry, analytical workflows can be automated and scaled-up significantly. Public or private Collections of time series on Statit are either public or private. Public collections of time series are visible to all and anyone can consume time series. Some of these public collections might be looking for collaborators to develop and maintain the series. In this case, users can contact the administrator to take part. Private collections of time series are only accessible to a select number of collaborators. They are not hidden from the public world. Getting started To understand how Statit works, head over to public collections such as historical long-term patents declaration in OECD countries since the 17th century or search for one Explore the collection, explore time series and download time series. Save one of the serie for future reference in your subscriptions. Then, install the Excel add-in to access data directly in Excel. See the full doc here If you are interested in accessing the Statit through the API, head over here Publishing Ready to get started and build your own collection? This feature is only available to select users for the moment. Please reach-out to hi@gostatit.com for us to open it for you.","title":"What is Statit?"},{"location":"what_is/#what-is-statit","text":"Statit is a tool for teams to manage time series collaboratively . Time series are great data structures that support a range of analytical use cases such as economic research, strategic planning, environmental monitoring or performance reporting. Time series are used in education, academic research, government and in the business world .","title":"What is Statit?"},{"location":"what_is/#whats-the-problem","text":"In many cases, analytical work is performed as part of a team : Developing collaborative time-serie intelligence on a specific subject (physical market prices) Planning business operations using a set of common assumptions from sales, supply and finances Monitoring activity across various organisations In the examples above, the team will at one point need to share time series inputs (case 1 and 2) or outputs (case 2 and 3). But how to share time series ? The best way is to put time series in a shared central space and let collaborators edit and access time series according to their needs. Think Google docs or Dropbox for time series. But these do not work with time series. Neither does Excel. And setting-up a database is tricky and is just the beginning of a solution.","title":"What's the problem"},{"location":"what_is/#the-solution","text":"Teams need an out of the box collaborative registry for storing and accessing time series . Here come Statit Statit provides a managed collaborative registry with four main advantages: Securing time-serie assets - All time series are stored in one place in the cloud with back-up and all revisions stored. Enabling collaboration - Teams collaborate around collections of series. Individual analysts can edit, review, access series according to the permissions provided by the collection administrator Improving time-serie management efficiency - By placing time series as shared ressources, teams collaborate much more efficiently, avoiding duplicate work and improving the quality of input and output Accelerating analytical workflows - With time series in a modern registry, analytical workflows can be automated and scaled-up significantly.","title":"The solution"},{"location":"what_is/#public-or-private","text":"Collections of time series on Statit are either public or private. Public collections of time series are visible to all and anyone can consume time series. Some of these public collections might be looking for collaborators to develop and maintain the series. In this case, users can contact the administrator to take part. Private collections of time series are only accessible to a select number of collaborators. They are not hidden from the public world.","title":"Public or private"},{"location":"what_is/#getting-started","text":"To understand how Statit works, head over to public collections such as historical long-term patents declaration in OECD countries since the 17th century or search for one Explore the collection, explore time series and download time series. Save one of the serie for future reference in your subscriptions. Then, install the Excel add-in to access data directly in Excel. See the full doc here If you are interested in accessing the Statit through the API, head over here","title":"Getting started"},{"location":"what_is/#publishing","text":"Ready to get started and build your own collection? This feature is only available to select users for the moment. Please reach-out to hi@gostatit.com for us to open it for you.","title":"Publishing"}]}